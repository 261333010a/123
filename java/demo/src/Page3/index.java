package Page3;

public class index {
    /*
    数据类型：
        整数类型  小数类型  字符类型  字符串类型  布尔类型
        科学计数法：e  double a = 123.4e1;  123.4*10的一次方 ，e代表10 ，e1代表10的一次方

        字符类型：单引号中只能有一个字母或一个数字或一个中文

        声明变量： 数据类型  名字 [= 值];
        声明常量： final  数据类型  名字 [= 值];

        成员变量：在类中定义的变量，在整个类中都有效
            实列变量：数据类型  名字 = 值;
            静态变量(static): static 数据类型  名字 = 值;  可以跨类  可以用 "类名.静态变量"在其他类使用

        局部变量：定义在方法中(“{}"之间的代码中声明的变量)，只能在当前代码块中使用，局部变量与成员变量的名字相同
                                                                     成员变量在次方体体暂时失效


      运算符：
         赋值运算符(=)  算数运算符  自增和自减运算符  比较运算符  逻辑运算符  位运算符  三元运算符

          取模：%
            余数的值是正数还是负数取决于第一个数(被模数)的正数还是负数
            余数的值是整数还是小数取决于第一个数(被模数)的整数还是小数

          比较运算符：instanceof
            判断对象是否在这个class类名内
            TestDataType ti = new TestDataType();
            System.out.println(ti instanceof TestDataType);

         逻辑运算符
            &&：且
            短路情况：前面的表达式为false，则整个表达式没必要计算量，其结果为false

            ||：或
            短路情况：前面的表达式为true，则整个表达式没必要计算量，其结果为true

          位运算符：只对整数类型和char类型有效
            &:与(位运算符与)：将两边换算成二进制进行计算，按位运算，结果转换回来，
                            只有两边运算符结果都为1，其结果为1，否则为0

            |：或(位运算符或)：将两边换算成二进制进行计算，按位运算，结果转换回来，
                            如果有一个为1，结果为1，两边为0，才为0

            ^：异或：将两边换算成二进制进行计算，按位运算，结果转换回来，两边运算不同才为1，相同为0

            <<：向左扩大数值，怎么扩大，移多少位，就乘以2的多少次幂

            >>：向右移缩小数值，怎么缩小，移多少位，就除以2的多少次幂   区分正数和负数

            >>>:无符号右移，跟右移一样，  不区分正数和负数
     */

    /*
            Stack 栈  先进后出
            Queue 队列  先进先出
            List 集合  有下标  存的顺序与取得的顺序一致
            LinedList 类 是Queue的子类  存的顺序与取得的顺序一致
     */





}
