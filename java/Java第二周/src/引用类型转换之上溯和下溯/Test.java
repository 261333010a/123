package 引用类型转换之上溯和下溯;


public class Test {
    /*
    上溯造型(Upcasting)：子类转换为父类，自动转换

        前提：具有继承或实现关系

        ps：向上转换损失了子类新扩展的属性和方法，仅可以使用从父类中继承的属性和方法
     */
    /*
    把子类实例給到父类引用，会发生上溯造型，自动发生--------父类 名字 = new 子类();
    Animal one = new Cat();----------失了子类新扩展的属性和方法，仅可以使用从父类中继承的属性和方法

    Cat two = new Cat();----------没有发生上溯造型，可以访问子类新扩展的属性和方法
     */


    /*
    下溯造型(Downcasting)：将父类对象显示的转换成子类类型， 强制转换

        前提：曾经向上转换过的对象，才能再向下转换。对象不允许不经过上溯造型而直接下溯造型。
     */
    /*
    下溯造型
    曾经向上转换过的对象，才能再向下转换-------------Animal three = new Dog();
                       需要手动转换--------------Dog four = (Dog) three;
     */
}
